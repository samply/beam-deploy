#!/bin/bash -e

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )



cd $SCRIPT_DIR
export BROKER_ID
export BROKER_URL="https://${BROKER_ID}"
export APP_ID_SHORT=app1
export APP_KEY=App1Secret

export VAULT_TOKEN=$(echo $RANDOM | md5sum | head -c 20; echo;)

function clean() {
  case "$1" in
    dev)
      docker_compose_file="docker-compose-dev.yml"
    ;;
    central)
      docker_compose_file="docker-compose-central.yml"
    ;;
    local)
      docker_compose_file="docker-compose-local.yml"
    ;;
  esac
  docker-compose -f $docker_compose_file down
  rm -vf pki/*.pem pki/*.json
}

case "$1" in
  start_dev)
    [ -z "$BROKER_ID" ] && ( echo "BROKER_ID not set!"; exit 1)
    [ -z "$PROXY1_ID" ] && ( echo "PROXY1_ID not set!"; exit 1)
    [ -z "$PROXY2_ID" ] && ( echo "PROXY2_ID not set!"; exit 1)
    export PROXY1_ID
    export PROXY2_ID
    export PROXY1_ID_SHORT=$(echo $PROXY1_ID | cut -d '.' -f 1)
    export PROXY2_ID_SHORT=$(echo $PROXY2_ID | cut -d '.' -f 1)
    export BROKER_ID=$(echo $PROXY1_ID | cut -d '.' -f 2-)
    clean dev
    echo "$VAULT_TOKEN" > ./pki/pki.secret
    pki/pki.sh devsetup
    docker-compose -f docker-compose-dev.yml up --abort-on-container-exit
    ;;
  start_central)
    [ -z "$BROKER_ID" ] && ( echo "BROKER_ID not set!"; exit 1)
    clean central
    echo "$VAULT_TOKEN" > ./pki/pki.secret
    pki/pki.sh setup_central
    docker-compose -f docker-compose-central.yml up --abort-on-container-exit
    ;;
  start_local)
    [ -z "$BROKER_ID" ] && ( echo "BROKER_ID not set!"; exit 1)
    [ -z "$PROXY_ID" ] && ( echo "PROXY_ID not set!"; exit 1)
    export PROXY_ID
    export PROXY_ID_SHORT=$(echo $PROXY_ID | cut -d '.' -f 1)
    export BROKER_ID=$(echo $PROXY_ID | cut -d '.' -f 2-)
    docker-compose -f docker-compose-local.yml up --abort-on-container-exit
    ;;
  clean)
    clean $2
    ;;
  stop)
    clean $2
    ;;
  *)
    echo "Usage: $0 start_dev|start_central|start_local|stop|clean"
    ;;
esac
